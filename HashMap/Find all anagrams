public class Solution {
    
    public static boolean compare( HashMap<Character, Integer> mapp, HashMap<Character, Integer> maps){
    
    for(char ch:maps.keySet()){
        if(mapp.containsKey(ch)){
            if(mapp.get(ch)!=maps.get(ch)){
                
            
            return false;
        }
        }
        else
            return false;
    }
        
        
  return true;
    
    
}
    
    public static ArrayList<Integer> findAnagramsIndices(String str, int n, String ptr, int m){
        // Write your code here.
        // Use two hashmap
        ArrayList<Integer> ans=new ArrayList<>();
        HashMap<Character, Integer> maps=new HashMap<>();
         HashMap<Character, Integer> mapp=new HashMap<>();
        
        for(int i=0;i<ptr.length();i++){
            char ch=ptr.charAt(i);
            if(mapp.containsKey(ch)){
                mapp.put(ch, mapp.get(ch)+1);
            }else
                mapp.put(ch,1);
        }
    
    
        for(int i=0;i<ptr.length();i++){
            char ch=str.charAt(i);
            if(maps.containsKey(ch)){
                maps.put(ch, maps.get(ch)+1);
            }else
                maps.put(ch,1);
        }
    
  int i=ptr.length();
  while(i<str.length()){
      if(compare(mapp, maps)){
          ans.add(i-ptr.length());
      }
      char ch=str.charAt(i);
      if(maps.containsKey(ch)){
                maps.put(ch, maps.get(ch)+1);
            }else
                maps.put(ch,1);
      
      
      char c=str.charAt(i-ptr.length());
      if(maps.get(c)==1){
          maps.remove(c);
      }else
          maps.put(c, maps.get(c)-1);
      i++;
  }
if(compare(mapp, maps)){
          ans.add(i-ptr.length());
      }
return ans;
        
        
    }
}
