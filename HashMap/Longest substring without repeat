/*
	- You are given a string that may or may not contain repeating characters.
	- Your task is to find out the length of the longest substring of this given string that does not 
    contain any repeating characters.

*/

public class solution 
{
	public static int longestSubstringLength(String str) 
	{

		//write your code here
        if(str.length()==0){
            return 0;
        }
        int ans=0;
        int i=-1;
        int j=-1;
        HashMap<Character, Integer> map=new HashMap<>();
        while(true){
            boolean f1=false;
            boolean f2=false;
            
            //Acquire
            while(i<str.length()-1){
                f1=true;
                i++;
                char ch=str.charAt(i);
             //   map.put(ch,getOrDefault(ch,0)+1);
                if(map.containsKey(ch)){
                    map.put(ch,map.get(ch)+1);
                }else
                    map.put(ch,1);
                if(map.get(ch)==2){
                    break;
                }else{
                    int l=i-j;
                    if(l>ans)
                        ans=l;
                }
                
            }
            //Release
            while(j<i){
                f2=true;
                j++;
                char  c=str.charAt(j);
                map.put(c,map.get(c)-1);
                if(map.get(c)==1){
                    break;
                }
            }
            if(f1==false && f2==false ){
                break;
            }
        }
        
        

		return ans;
	}
}
